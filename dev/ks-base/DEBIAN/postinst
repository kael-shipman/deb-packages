#!/bin/bash

set -e

. /usr/share/debconf/confmodule


if [ "$1" != "triggered" ]; then
    # Get home directory
    if [ -z "$HOME" ]; then
        if [ -n "$SUDO_USER" ]; then
            HOME="/home/$SUDO_USER"
        elif [ -n "$USER" ]; then
            HOME="/home/$USER"
        else
            >&2 "E: Can't find \$HOME environment variable! Don't know what to do."
            exit 1
        fi
    fi

    # Find the admin user
    user="$SUDO_USER"
    if [ -z "$user" ]; then
        user="$USER"
    fi
    if [ "$user" == "root" ]; then
        >&2 echo "E: You must run this install using sudo, not su (no viable user found to use as primary admin)"
        exit 1
    fi


    # Get the mountpoint
    db_get ks-base/mountpoint
    MOUNTPOINT="$RET"

    # Make sure it's not root
    if [ "$MOUNTPOINT" == "/" ]; then
        >&2 echo "E: Mountpoint set to '/'. This cannot be. Manual intervention required."
        exit 3
    fi


    # Make sure mountpoint exists and has correct ownership
    if [ ! -d "$MOUNTPOINT" ]; then
        if [ -L "$MOUNTPOINT" ]; then
            >&2 echo "E: '$MOUNTPOINT' points to a bad symlink. Not sure what to do."
            exit 1
        fi
        mkdir -p "$MOUNTPOINT"
        chown "$user:$user" "$MOUNTPOINT"
    fi


    # Make sure mountpoint is set up in fstab or systemd
    gmnt="$(echo "$MOUNTPOINT" | sed 's#/$##')"
    if ! egrep -wq "$gmnt/*" /etc/fstab; then
        sysdmount="$(echo "$MOUNTPOINT" | sed -r 's#(^/|/$)##g' | sed 's#/#-#g').mount"
        if ! systemctl list-units | grep -Fq "$sysdmount"; then
            >&2 echo "E: Looks like mountpoint is not set up in fstab or systemd. You MUST set up and mount your data"
            >&2 echo "   partition at '$MOUNTPOINT' before continuing."
            exit 2
        fi
    fi


    # Make sure mountpoint is mounted
    if ! mount | grep -wq "$gmnt"; then
        >&2 echo "E: You MUST MOUNT your data partition at '$MOUNTPOINT'"
        >&2 echo "   before continuing"
        exit 8
    fi


    # Make sure synced folders are created at mountpoint
    db_get ks-base/synced-dirs
    eval "synced=($RET)"
    for d in "${synced[@]}"; do
        if [ ! -e "$MOUNTPOINT/$d" ]; then
            mkdir -p "$MOUNTPOINT/$d"
        fi
    done


    # Make sure home directories are properly linked
    db_get ks-base/linked-dirs
    eval "linked=($RET)"
    for d in "${linked[@]}"; do
        if [ ! -L "$HOME/$d" ]; then
            if [ -d "$HOME/$d" ]; then
                if [ "$(ls -A "$HOME/$d" | wc -l)" -gt 0 ]; then
                    >&2 echo "E: Directory '$HOME/$d' already exists and has files in it."
                    >&2 echo "   You must clean this up before proceeding with the install."
                    exit 4
                else
                    rmdir "$HOME/$d"
                fi
            fi
            ln -snf "$MOUNTPOINT/$d" "$HOME/"
        fi
    done
fi

